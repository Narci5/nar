{"version":3,"sources":["logo.svg","componants/points.js","componants/ponts2.js","componants/symptoms.js","componants/depthcard2.js","componants/depthcard3.js","componants/depthcard4.js","componants/depthcard5.js","componants/depthcard6.js","componants/depthcard7.js","componants/depthcard8.js","componants/depthcard9.js","componants/depthcard10.js","componants/depthcard11.js","componants/depthcard12.js","componants/depthcard13.js","componants/depthcard14.js","componants/depthcard15.js","componants/depthcard.js","componants/depth1.js","componants/statement.js","componants/nav.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","iconColor","color","avBack","FolderList","classes","List","className","ListItem","ListItemAvatar","Avatar","ListItemText","primary","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","bpoint","fontWeight","button","alignContent","SimpleCard","Card","CardContent","Typography","gutterBottom","variant","component","listText","padding","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","bcolor","FullWidthTabs","useTheme","React","useState","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab","label","axis","direction","onChangeIndex","dir","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47d9ccc6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  iconColor: {\r\n      color: '#E96570',\r\n  },\r\n  avBack: {\r\n      color: \"#E96570\",\r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemAvatar >\r\n          <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Have an exaggerated sense of self-importance\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Have a sense of entitlement and require constant, excessive admiration\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Expect to be recognized as superior even without achievements that warrant it\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Exaggerate achievements and talents\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Be preoccupied with fantasies about success, power, brilliance, beauty or the perfect mate\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Believe they are superior and can only associate with equally special people\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Monopolize conversations and belittle or look down on people they perceive as inferior\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Expect special favors and unquestioning compliance with their expectations\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Take advantage of others to get what they want\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Have an inability or unwillingness to recognize the needs and feelings of others\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Be envious of others and believe others envy them\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Behave in an arrogant or haughty manner, coming across as conceited, boastful and pretentious\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Insist on having the best of everything — for instance, the best car or office\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  iconColor: {\r\n      color: 'black',\r\n  },\r\n  avBack: {\r\n      color: \"#E96570\",\r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemAvatar className={classes.avBack} >\r\n          <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Become impatient or angry when they don't receive special treatment\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Have significant interpersonal problems and easily feel slighted\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"React with rage or contempt and try to belittle the other person to make themselves appear superior\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Have difficulty regulating emotions and behavior\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Experience major problems dealing with stress and adapting to change\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Feel depressed and moody because they fall short of perfection\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n        <Avatar className={classes.iconColor}>\r\n            <CheckBoxIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Have secret feelings of insecurity, shame, vulnerability and humiliation\" />\r\n      </ListItem>\r\n      \r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CenterFocusStrong } from '@material-ui/icons';\r\nimport Points from './points';\r\nimport Points2 from './ponts2';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: \"75%\",\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  bpoint: {\r\n      fontSize: 16,\r\n      fontWeight: 'bold',\r\n\r\n  },\r\n  button: {\r\n      alignContent: 'center',\r\n  }\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n        Narcissist\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Symptoms\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n        Narcissistic personality disorder\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n        <Typography className={classes.bpoint}>Signs and symptoms of narcissistic personality disorder and the severity of symptoms vary. People with the disorder can:</Typography> <br/>\r\n        </Typography>\r\n        <Points />\r\n        <Typography className={classes.bpoint}>At the same time, people with narcissistic personality disorder have trouble handling anything they perceive as criticism, and they can:</Typography> <br/>\r\n        <Points2/>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Another core narcissist trait is the constant need for attention—even just by following you around the house, asking you to find things, or constantly saying something to grab your attention. Validation for a narcissist counts only if it comes from others. Even then, it doesn't count for much. A narcissist's need for validation is like a funnel. You pour in positive, supportive words, and they just flow out the other end and are gone. No matter how much you tell narcissists you love them, admire them, or approve of them, they never feel it's enough—because deep down they don't believe anyone can love them.\r\n\r\nDespite all their self-absorbed, grandiose bragging, narcissists are actually very insecure and fearful of not measuring up. They constantly try to elicit praise and approval from others to shore up their fragile egos, but no matter how much they're given, they always want more.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"You can spot a narcissist through their extremely high need for everything to be perfect. They believe they should be perfect, you should be perfect, events should happen exactly as expected, and life should play out precisely as they envision it. This is an excruciatingly impossible demand, which results in the narcissist feeling dissatisfied and miserable much of the time. The demand for perfection leads the narcissist to complain and be constantly dissatisfied.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Trying to grab control of everything is archetypal narcissist behavior. Since narcissists are continually disappointed with the imperfect way life unfolds, they want to do as much as possible to control it and mold it to their liking. They want and demand to be in control, and their sense of entitlement makes it seem logical to them that they should be in control—of everything.\r\nNarcissists always have a storyline in mind about what each character in their interaction should be saying and doing. When you don't behave as expected, they become quite upset and unsettled. They don't know what to expect next because you're off-script. They demand that you say and do exactly what they have in mind so they can reach their desired conclusion. You are a character in their internal play, not a real person with your own thoughts and feelings. (This is why breaking up with a narcissist can be particularly tricky.)\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Lack of responsibility is a glaring sign of a narcissist. Although narcissists want to be in control, they never want to be responsible for the results—unless, of course, everything goes exactly their way and their desired result occurs. When things don't go according to their plan or they feel criticized or less than perfect, the narcissist places all the blame and responsibility on you. It has to be someone else's fault. Sometimes that blame is generalized—everyone's out to get them. Most often, however, the narcissist blames the one person who is the most emotionally close, most attached, loyal, and loving in their life—you. To maintain the façade of perfection, narcissists always have to blame someone or something else. You are the safest person to blame because you are least likely to leave or reject them.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Many people lack boundaries or cross other people's boundaries regularly, but among narcissists, this is status-quo behavior. Narcissists can't accurately see where they end and you begin. They are a lot like two-year-olds. They believe that everything belongs to them, everyone thinks and feels the same as they do, and everyone wants the same things they do. They are shocked and highly insulted to be told no. If a narcissist wants something from you, they'll go to great lengths to figure out how to get it through persistence, cajoling, demanding, rejecting, or pouting. These are all common narcissist behaviors.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Narcissists have very little ability to empathize with others; this lack of empathy is a hallmark sign of narcissism. Narcissists tend to be selfish and self-involved and are usually unable to understand what other people are feeling. They expect others to think and feel the same as they do and seldom give any thought to how others feel. They are also rarely apologetic, remorseful, or guilty.\r\n\r\nSome narcissists also lack an understanding of the nature of feelings. They don't understand how their feelings occur. They think their feelings are caused by someone or something outside of themselves. They don't realize that their feelings are caused by their own biochemistry, thoughts, and interpretations. In a nutshell, narcissists always think you cause their feelings—especially the negative ones. They conclude that because you didn't follow their plan or because you made them feel vulnerable, you are to blame.\r\n\r\nThis lack of empathy makes true emotional connection and relationships with narcissists difficult or impossible. They just don't notice what anyone else is feeling.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Although they're highly attuned to perceived threats, anger, and rejection from others, narcissists frequently misread subtle facial expressions and are typically biased toward interpreting facial expressions as negative. Unless you are acting out your emotions dramatically, the narcissist won't accurately perceive what you're feeling. Even saying I'm sorry or I love you when the narcissist is on edge and angry can backfire. They won't believe you and may even misperceive your comment as an attack.\r\n\r\nIn addition, if your words and expressions aren't congruent, the narcissist will likely respond erroneously or get defensive. This is why narcissists often misinterpret sarcasm as actual agreement or joking from others as a personal attack. The lack of ability to correctly read body language, a common narcissist trait, is one reason narcissists are deficiently empathetic to your feelings. They don't see them, they don't interpret them correctly, and overall they don't believe you feel any differently than they do.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"You've probably made the mistake of trying to reason and use logic with the narcissist to get them to understand the painful effect their behaviors have on you. You think that if they understand how much their behavior hurt you, they'll change. Your explanations, however, don't make sense to the narcissist, who only seems able to be aware of their own thoughts and feelings. Although narcissists may say they understand, they honestly don't.\r\n\r\nTherefore, narcissists make most of their decisions based on how they feel about something. They simply must have that red sports car, based entirely on how they feel driving it, not by whether it is a good choice to make for the family or for the budget. If they're bored or depressed, they want to move or end the relationship or start a new business. They always look to something or someone outside themselves to solve their feelings and needs. They expect you to go along with their solutions, and they react with irritation and resentment if you don't.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"The narcissist's personality is split into good and bad parts, and they also split everything in their relationships into good and bad. Any negative thoughts or behaviors are blamed on you or others, whereas they take credit for everything that is positive and good. They deny their negative words and actions while continually accusing you of disapproving. They also remember things as completely good and wonderful or as bad and horrible. They can't seem to mix these two constructs.\r\n\r\nA few examples of a narcissist's splitting behavior in action: Marty labeled the whole vacation ruined and the worst ever because the hotel room didn't meet his expectations and the weather wasn't perfect. Bob was blamed for 20 years because he wasn't there when his wife had their first child even though he was stranded in Chicago in a snowstorm. Alice's husband dismissed her concerns about the $30,000 cost for the new landscaping because he loved it.\r\n\r\nNarcissists aren't able to see, feel, or remember both the positive and the negative in a situation. They can deal with only one perspective at a time—theirs.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"The narcissist's entire life is motivated and energized by fear. You wouldn't initially pick this out as a sign of a narcissist though because most narcissists' fears are deeply buried and repressed. They're constantly afraid of being ridiculed, rejected, or wrong. They may have fears about germs, about losing all their money, about being emotionally or physically attacked, about being seen as bad or inadequate, or about being abandoned. This makes it difficult and sometimes impossible for the narcissist to trust anyone else.\r\n\r\nIn fact, the closer your relationship becomes, the less they will trust you. Narcissists fear any true intimacy or vulnerability because they're afraid you'll see their imperfections and judge or reject them. No amount of reassurance seems to make a difference, because narcissists deeply hate and reject their own shameful imperfections. Narcissists never seem to develop trust in the love of others, and they continually test you with worse and worse behaviors to try to find your breaking point. Their gripping fear of being found out or abandoned never seems to dissipate.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Anxiety is an ongoing, vague feeling that something bad is happening or about to happen. Some narcissists show their anxiety by talking constantly about the doom that is about to happen, while some hide and repress their anxiety. But most narcissists project their anxiety onto their closest loved ones, accusing them of being negative, unsupportive, mentally ill, not putting them first, not responding to their needs, or being selfish. All this is designed to transfer anxiety to the loved one in an attempt to not feel it themselves. As you feel worse and worse, the narcissist feels better and better. In fact, they feel stronger and more superior as you feel your anxiety and depression grow.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Narcissists don't feel much guilt because they think they are always right, and they don't believe their behaviors really affect anyone else. But they harbor a lot of shame. Shame is the belief that there is something deeply and permanently wrong or bad about who you are. Buried in a deeply repressed part of the narcissist are all the insecurities, fears, and rejected traits that they are constantly on guard to hide from everyone, including themselves. The narcissist is acutely ashamed of all these rejected thoughts and feelings. Keeping their vulnerabilities hidden is essential to the narcissist's pretend self-esteem or false self. Ultimately, however, this makes it impossible for them to be completely real and transparent.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Because of their inability to understand feelings, their lack of empathy, and constant need for self-protection, narcissists can't truly love or connect emotionally with other people. They cannot look at the world from anyone else's perspective. This makes them emotionally needy. When one relationship is no longer satisfying, they often overlap relationships or start a new one as soon as possible. They desperately want someone to feel their pain, to sympathize with them, and to make everything just as they want it to be. It's a form of codependency, except they have little ability to respond to your pain or fear or even your day-to-day need for care and sympathy.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Thoughtful, cooperative behaviors require a real understanding of each other's feelings. How will the other person feel? Will this action make both of us happy? How will this affect our relationship? These are questions that narcissists don't have the capacity or the motivation to think about. Don't expect the narcissist to understand your feelings, give in, or give up anything they want for your benefit. It's useless.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'inline-block',\r\n    \r\n  },\r\n  listText: {\r\n      padding: '3%',\r\n      margin: '3%',\r\n      \r\n  }\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem >\r\n        <ListItemText className={classes.listText} primary=\"Superiority is the No. 1 sign of a narcissist. This is different from self-confidence alone. The world of the narcissist is all about good/bad, superior/inferior, and right/wrong. There is a definite hierarchy, with the narcissist at the top—which is the only place they feel safe. Narcissists have to be the best, the most right, and the most competent; do everything their way; own everything; and control everyone.\r\n\r\nInterestingly enough, narcissists can also get that superior feeling by being the worst, the most wrong, or the most ill, upset, or injured. Then they feel entitled to receive soothing concern and recompense and even the right to hurt you or demand apologies to make things even. This is called vulnerable or covert narcissism.\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CenterFocusStrong } from '@material-ui/icons';\r\nimport Depthcard2 from './depthcard2';\r\nimport Depthcard3 from './depthcard3';\r\nimport Depthcard4 from './depthcard4';\r\nimport Depthcard5 from './depthcard5';\r\nimport Depthcard6 from './depthcard6';\r\nimport Depthcard7 from './depthcard7';\r\nimport Depthcard8 from './depthcard8';\r\nimport Depthcard9 from './depthcard9';\r\nimport Depthcard10 from './depthcard10';\r\nimport Depthcard11 from './depthcard11';\r\nimport Depthcard12 from './depthcard12';\r\nimport Depthcard13 from './depthcard13';\r\nimport Depthcard14 from './depthcard14';\r\nimport Depthcard15 from './depthcard15';\r\nimport Depthcard from './depthcard';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: \"75%\",\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  bpoint: {\r\n      fontSize: 16,\r\n      fontWeight: 'bold',\r\n\r\n  },\r\n  button: {\r\n      alignContent: 'center',\r\n  }\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n        Narcissist\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          In Depth\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n        Examples of\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n        <Typography className={classes.bpoint}>Superiority and entitlement</Typography> <br/>\r\n        </Typography>\r\n        <Depthcard/>\r\n        <Typography className={classes.bpoint}>Exaggerated need for attention and validation</Typography> <br/>\r\n        <Depthcard2/>\r\n        <Typography className={classes.bpoint}>Perfectionism</Typography> <br/>\r\n        <Depthcard3/>\r\n        <Typography className={classes.bpoint}>Great need for control</Typography> <br/>\r\n        <Depthcard4/>\r\n        <Typography className={classes.bpoint}>Lack of responsibility—blaming and deflecting</Typography> <br/>\r\n        <Depthcard5/>\r\n        <Typography className={classes.bpoint}>Lack of boundaries</Typography> <br/>\r\n        <Depthcard6/>\r\n        <Typography className={classes.bpoint}>Lack of empathy</Typography> <br/>\r\n        <Depthcard7/>\r\n        <Typography className={classes.bpoint}>Perceiving everything as a threat</Typography> <br/>\r\n        <Depthcard8/>      \r\n        <Typography className={classes.bpoint}>Emotional reasoning</Typography> <br/>\r\n        <Depthcard9/>\r\n        <Typography className={classes.bpoint}>Splitting</Typography> <br/>\r\n        <Depthcard10/>\r\n        <Typography className={classes.bpoint}>Fear of rejection and ridicule</Typography> <br/>\r\n        <Depthcard11/>\r\n        <Typography className={classes.bpoint}>Anxiety</Typography> <br/>\r\n        <Depthcard12/>\r\n        <Typography className={classes.bpoint}>Deeply repressed shame</Typography> <br/>\r\n        <Depthcard13/>\r\n        <Typography className={classes.bpoint}>An inability to be truly vulnerable</Typography> <br/>\r\n        <Depthcard14/>\r\n        <Typography className={classes.bpoint}>An inability to communicate or work as part of a team</Typography> <br/>\r\n        <Depthcard15/>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CenterFocusStrong } from '@material-ui/icons';\r\nimport Points from './points';\r\nimport Points2 from './ponts2';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: \"75%\",\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  bpoint: {\r\n      fontSize: 16,\r\n      fontWeight: 'bold',\r\n\r\n  },\r\n  button: {\r\n      alignContent: 'center',\r\n  }\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n        Narcissist\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Statement\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n        Exactly that\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n        <Typography className={classes.bpoint}>Text here</Typography> <br/>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Symp from './symptoms';\r\nimport Depth from './depth1';\r\nimport Statement from './statement';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"100%\", \r\n  },\r\n  bcolor: {\r\n    backgroundColor: \"#E96570\",\r\n  }\r\n\r\n}));\r\n\r\nexport default function FullWidthTabs() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.bcolor} position=\"static\" >\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"white\"\r\n          textColor=\"white\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Definition\" {...a11yProps(0)} />\r\n          <Tab label=\"In Depth\" {...a11yProps(1)} />\r\n          <Tab label=\"Statement\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Symp />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <Depth />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <Statement/>\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport NavBar from './componants/nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}